---For waf bypass, and similar---
X-Forwarded-Host
X-Forwarded-Port
X-Forwarded-Scheme
Origin: null
Origin: [siteDomain].attacker.com
X-Frame-Options: Allow
X-Forwarded-For: 127.0.0.1
X-Client-IP: 127.0.0.1
Client-IP: 127.0.0.1
_________________________________________________________________

Kali Tools

1. For Forced Browsing
feroxbuster -u <URL> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -k

=> SSL Certificate Issue
Some apps (like yours) have invalid/misconfigured SSL.
Fix → tell feroxbuster to ignore SSL errors:
feroxbuster -u <URL> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -k


______________________________________________________________________
FInding  FIND HIDDEN INFORMATION FORM JAVASCRIPT

1. katana -u https://URL -d 5 -jc | grep ".js$" | uniq | sort > dir.txt
2. git clone https://github.com/m4ll0k/SecretFinder.git
3. └─# python3 -m venv venv
4. └─# source venv/bin/activate
5. python -m pip install -r requirements.txt   
6. cat /home/kali/dir.txt | while read url; do python SecretFinder.py -i "$url" -o cli >> /home/kali/secret.txt; done

_______________________________________________________________________
To find Refelected XSS automation tool

1. Dalfox
git clone https://github.com/hahwul/dalfox
cd dalfox
go install
go build

=> if want to Run where cookies are needed
./dalfox url "https://URL=Branchcxxf7" \
  --cookie "ci_session=e69ca4tejrjhaq1rcpkaihcgje42ltis" \
  -o /tmp/dalfox_status_auth.json

=>./dalfox url "https://target.tld/page?param=test"
_________________________________________________________________________
Web cache deception

1. Cache rules are often set up to store static resources, which generally don't change frequently 
and are reused across multiple pages. Dynamic content is not cached as it's more likely to contain sensitive information, 
ensuring users get the latest data directly from the server.
2. Static file extension rules : .css for stylesheets or .js for JavaScript files.
3. Static directory rules : /static or /assets
4.File name rules - These rules match specific file names to target files that are universally required for web operations and 
change rarely, such as robots.txt and favicon.ico

Poin to Rember 
While testing for discrepancies and crafting a web cache deception exploit, make sure that each request you send has a different cache key. 
Otherwise, you may be served cached responses, which will impact your test results.
As both URL path and any query parameters are typically included in the cache key, you can change the key by adding a query string to the 
path and changing it each time you send a request. Automate this process using the Param Miner extension. To do this, once you've installed the extension, 
click on the top-level Param miner > Settings menu, then select Add dynamic cachebuster. Burp now adds a unique query string to every request that you make.
You can view the added query strings in the Logger tab.

Detecting Cached Responses

1. Check X-Cache Header (eg: X-Cache: hit)
   hit → Response served from cache
   miss → Response fetched from origin (send again, may turn into hit)
   dynamic → Content generated dynamically, not cached
   refresh → Cached content was outdated and revalidated

2. Check Cache-Control Header
   Look for public with max-age > 0 → Cacheable resource (not always guaranteed)

3. Compare Response Times
   Fast response → Likely cached
   Slow response → Likely from origin server

